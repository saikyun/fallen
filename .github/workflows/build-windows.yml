name: Windows Build
on: [push]
jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: cd ${{ github.workspace }}
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Clone janet
        run: cd ${{ github.workspace }} && git clone https://github.com/janet-lang/janet && cd janet
      #- run: cd ${{ github.workspace }}/janet && build_win all
      #  shell: cmd
      - run: cd ${{ github.workspace }}/janet && build_win all
        shell: cmd
      #- run: cd ${{ github.workspace }}/janet && build_win test
      #  shell: cmd
      - name: List files in janet build
        run: |
          ls ${{ github.workspace }}/janet/build
      - run: mkdir ${{ github.workspace }}\janet\bin
      - run: mv ${{ github.workspace }}\janet\janet.exe ${{ github.workspace }}\janet\bin
      - run: "echo \"${{ github.workspace }}\\janet\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append"
      # might be we could use this instead...
      #- run: "echo \"$env:USERPROFILE\\janet\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append"
      - run: echo %PATH%
        shell: cmd
      - run: echo %PATH%
        shell: cmd
      - run: dir ${{ github.workspace }}\janet\dist
        continue-on-error: true
        shell: cmd
      - run: dir ${{ github.workspace }}\janet\build
        continue-on-error: true
        shell: cmd
      - run: dir ${{ github.workspace }}\janet
        continue-on-error: true
        shell: cmd
      - run: echo %PATH%
        shell: cmd
      - run: janet -v
        continue-on-error: true
      - name: Install jpm
        run: cd ${{ github.workspace }} && git clone https://github.com/janet-lang/jpm
        shell: cmd
#      - run: cd ${{ github.workspace }}/jpm && set JANET_PATH="${{ github.workspace }}/janet/dist" && set JANET_BINPATH=${{ github.workspace }}/janet/dist && set JANET_LIBPATH=${{ github.workspace }}/janet/dist && set JANET_HEADERPATH=${{ github.workspace }}/janet/dist && cd ${{ github.workspace }}/jpm && ${{ github.workspace }}/janet/dist/janet.exe bootstrap.janet
#        shell: cmd
      - run: cd ${{ github.workspace }}\jpm && set JANET_HEADERPATH=${{ github.workspace }}\janet\dist&& set JANET_BINPATH=${{ github.workspace }}\janet\bin&& set JANET_LIBPATH=${{ github.workspace }}\janet\dist&& set JANET_PATH=${{ github.workspace }}\janet&& janet bootstrap.janet
        shell: cmd
      - name: jpm deps
        run: cd ${{ github.workspace }} && jpm deps
        shell: cmd
      - name: jpm build
        run: jpm build
        shell: cmd
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Remove release
        run: gh release delete -y windows-unstable
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        run: gh release create windows-unstable build/fallen.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
